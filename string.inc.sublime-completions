
{
	"scope": "source.pawn - variable.other.pawn",
	"completions":
	[
		{"trigger": "strlen", "contents": "strlen(${1:const string[]})"},
		{"trigger": "strpack", "contents": "strpack(${1:dest[]}, ${2:const source[]}, ${3:maxlength=sizeof dest})"},
		{"trigger": "strunpack", "contents": "strunpack(${1:dest[]}, ${2:const source[]}, ${3:maxlength=sizeof dest})"},
		{"trigger": "strcat", "contents": "strcat(${1:dest[]}, ${2:const source[]}, ${3:maxlength=sizeof dest})"},
		{"trigger": "strmid", "contents": "strmid(${1:dest[]}, ${2:const source[]}, ${3:start}, ${4:end}, ${5:maxlength=sizeof dest})"},
		{"trigger": "strins", "contents": "strins(${1:string[]}, ${2:const substr[]}, ${3:pos}, ${4:maxlength=sizeof string})"},
		{"trigger": "strdel", "contents": "strdel(${1:string[]}, ${2:start}, ${3:end})"},
		{"trigger": "strcmp", "contents": "strcmp(${1:const string1[]}, ${2:const string2[]}, ${3:bool:ignorecase=false}, ${4:length=cellmax})"},
		{"trigger": "strfind", "contents": "strfind(${1:const string[]}, ${2:const sub[]}, ${3:bool:ignorecase=false}, ${4:pos=0})"},
		{"trigger": "strval", "contents": "strval(${1:const string[]})"},
		{"trigger": "valstr", "contents": "valstr(${1:dest[]}, ${2:value}, ${3:bool:pack=false})"},
		{"trigger": "ispacked", "contents": "ispacked(${1:const string[]})"},
		{"trigger": "uudecode", "contents": "uudecode(${1:dest[]}, ${2:const source[]}, ${3:maxlength=sizeof dest})"},
		{"trigger": "uuencode", "contents": "uuencode(${1:dest[]}, ${2:const source[]}, ${3:numbytes}, ${4:maxlength=sizeof dest})"},
		{"trigger": "memcpy", "contents": "memcpy(${1:dest[]}, ${2:const source[]}, ${3:index=0}, ${4:numbytes}, ${5:maxlength=sizeof dest})"}
	]
}
